#==============================================================================
#
#   zshrc for arch
#
#==============================================================================

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

#PS1='[\u@\h \W]\$ '

# Env
export EDITOR=/usr/bin/vim

# Alias
alias ls='ls --color=auto'
alias l='ls -lahG'
alias ll='ls -lhG'
alias la='ls -aG'
alias lla='ls -lahG'
alias c='clear'
alias cl='clear;l'

alias yo='yaourt'
alias g='git'
alias startx='sudo systemctl start sddm'
alias clip='xclip -selection clipboard -i'


#---------------------------------------
# zsh
# ref: man zshoptions
#---------------------------------------
# Command completion
autoload -Uz compinit promptinit
compinit
promptinit
autoload -Uz colors
colors
autoload -Uz add-zsh-hook

# LS_COLORS
export LSCOLORS=gxfxcxdxbxegedabagacad
export LS_COLORS='di=36:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
zstyle ':completion:*' list-colors 'di=36' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'

# Options
setopt correct                  # Spelling correction for commands.
setopt nobeep                   # Trun off beep.
setopt prompt_subst             # For get command-output into prompt.
setopt auto_pushd               # Make cd push the old-dir onto the dir-stack.
setopt pushd_ignore_dups        # Do not push multiple cpies of the same-dir onto the dir-stack.
setopt no_flow_control          # Disable flow control(^S/^Q).
setopt interactive_comments     # Allow comments even in interactive-shells.

# History
HISTFILE=$HOME/.zsh_history
HISTSIZE=11000
SAVEHIST=10000
HISTTIMEFORMAT="[%Y/%M/%D-%H:%M:%S] "
setopt share_history            # Share command history file.
setopt append_history           # zsh sessions will append their history list to the history file, rather than replace it.
setopt extended_history         # Save each commands beginning timestamp(sec since the epoch) and the duration(sec) to the history file.
setopt hist_expire_dups_first   # Lost the oldest history-event duplicated so that the unique history-event is not lost.
setopt hist_no_store            # Prevent store the history-command to the history-list.
setopt hist_ignore_dups         # Do not enter command lines into history list if they are duplicates f the previous event.
setopt hist_ignore_space        # Remove command-lines from the history list when the first character on the line is a space.
setopt hist_reduce_blanks       # Remove superfluous blanks from each command line being added to the history list.

# VCS
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git svn hg bzr
zstyle ':vcs_info:*' max-exports 3  # Export normal,warn,error messages
zstyle ':vcs_info:*' formats '[%s! %F{cyan}*%b%f]'
zstyle ':vcs_info:*' actionformats '[%F{cyan}*%b%f(%F{red}%a%f)]'
zstyle ':vcs_info:git:*' formats '[(%s) %F{cyan}*%b%f]' '%F{yellow}%c%u %m%f'
zstyle ':vcs_info:git:*' actionformats '[(%s) %F{cyan}*%b%f(%F{red}%a%f)]' '%F{yellow}%c%u %m%f' '%F{red}<!%a>%f'
zstyle ':vcs_info:git:*' check-for-changes true     # check un-commit files
zstyle ':vcs_info:git:*' stagedstr "+"              # %c string
zstyle ':vcs_info:git:*' unstagedstr "-"            # %u string

# prompt
OK="(*^-^) OK! "
NG="(-_-;) NG! "

precmd() {
    local rprompt="[%F{magenta}%C%f]"

    psvar=()
    LANG=en_US.UTF-8 vcs_info

    if [[ -z ${vcs_info_msg_0_} ]]; then
        # do nothing...
    else
        local -a messages
        [[ -n "$vcs_info_msg_0_" ]] && messages+=( "${vcs_info_msg_0_}" )
        [[ -n "$vcs_info_msg_1_" ]] && messages+=( "${vcs_info_msg_1_}" )
        [[ -n "$vcs_info_msg_2_" ]] && messages+=( "${vcs_info_msg_2_}" )
        rprompt+="${(j: :)messages}"
    fi
    RPROMPT="$rprompt"
}

PROMPT="[%*]%# "
RPROMPT="[%F{magenta}%C%f]${vcs_info_msg_0_}"


#---------------------------------------
# Xmodmap
#---------------------------------------
if [[ -s ~/.Xmodmap ]]; then
    xmodmap ~/.Xmodmap
fi

